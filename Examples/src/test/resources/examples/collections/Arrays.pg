type com.kdsc.protogen.examples.collections.Arrays<T> {
    testDoubleArray : double[]
    testFloatArray : float[]
    testInt32Array : int32[]
    testInt64Array : int64[]
    testBoolArray : bool[]
    testStringArray : string[]
    testBytesArray : bytes[]
    testDecimalArray : decimal[]
    testDateArray : date[]
    testDatetimeArray : datetime[]
    testLocaldatetimeArray : localdatetime[]
    testMapArray : map<string, string>[]
    testSetArray : set<string>[]
    testValueorerrorArray : valueorerror<decimal>[]
    testObjectArray : com.kdsc.protogen.examples.simple.Type[]
    testGenericTypeArray : T[] //Not sure about this, T needs to be protogen type, how do we enforce this, I think we will have to put protogen type as bounds all the time
    testArrayArray : string[][]
    testOptionalDoubleArray : optional double[]
    testOptionalFloatArray : optional float[]
    testOptionalInt32Array : optional int32[]
    testOptionalInt64Array : optional int64[]
    testOptionalBoolArray : optional bool[]
    testOptionalStringArray : optional string[]
    testOptionalBytesArray : optional bytes[]
    testOptionalDecimalArray : optional decimal[]
    testOptionalDateArray : optional date[]
    testOptionalDatetimeArray : optional datetime[]
    testOptionalLocaldatetimeArray : optional localdatetime[]
    testOptionalMapArray : optional map<string, string>[]
    testOptionalSetArray : optional set<string>[]
    testOptionalValueorerrorArray : optional valueorerror<decimal>[] //Is this an optional valueorerror<decimal> array or an array of optional valueorerror, make consistent with java
    testOptionalObjectArray : optional com.kdsc.protogen.examples.simple.Type[]
    testOptionalGenericTypeArray : optional T[] //Not sure about this, T needs to be protogen type, how do we enforce this, I think we will have to put protogen type as bounds all the time
    testOptionalArrayArray : optional string[][]
}