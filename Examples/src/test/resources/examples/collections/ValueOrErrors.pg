type collections.ValueOrErrors {
    TestDoubleValueOrError : valueorerror<double>
    TestFloatValueOrError : valueorerror<float>
    TestInt32ValueOrError : valueorerror<int32>
    TestInt64ValueOrError : valueorerror<int64>
    TestBoolValueOrError : valueorerror<bool>
    TestStringValueOrError : valueorerror<string>
    TestBytesValueOrError : valueorerror<bytes>
    TestDecimalValueOrError : valueorerror<decimal>
    TestDateValueOrError : valueorerror<date>
    TestDatetimeValueOrError : valueorerror<datetime>
    TestLocaldatetimeValueOrError : valueorerror<localdatetime>
    TestMapValueOrError : valueorerror<map<string, string>>
    TestSetValueOrError : valueorerror<set<string>>
    TestValueOrErrorValueOrError : valueorerror<valueorerror<decimal>> //Hmm what does this mean if there is an error
    TestObjectValueOrError : valueorerror<collections.ValueOrErrors>
    TestArrayValueOrError : valueorerror<string[]>
    TestOptionalDoubleValueOrError : valueorerror<optional double>
    TestOptionalFloatValueOrError : valueorerror<optional float>
    TestOptionalInt32ValueOrError : valueorerror<optional int32>
    TestOptionalInt64ValueOrError : valueorerror<optional int64>
    TestOptionalBoolValueOrError : valueorerror<optional bool>
    TestOptionalStringValueOrError : valueorerror<optional string>
    TestOptionalBytesValueOrError : valueorerror<optional bytes>
    TestOptionalDecimalValueOrError : valueorerror<optional decimal>
    TestOptionalDateValueOrError : valueorerror<optional date>
    TestOptionalDatetimeValueOrError : valueorerror<optional datetime>
    TestOptionalLocaldatetimeValueOrError : valueorerror<optional localdatetime>
    TestOptionalMapValueOrError : valueorerror<optional map<string, string>>
    TestOptionalSetValueOrError : valueorerror<optional set<string>>
    TestOptionalValueOrErrorValueOrError : valueorerror<optional valueorerror<decimal>>
    TestOptionalObjectValueOrError : valueorerror<optional collections.ValueOrErrors>
    TestOptionalArrayValueOrError : valueorerror<optional string[]>
}