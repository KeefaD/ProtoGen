type collections.Maps {
//    TestDoubleMap : map<double, double>
//    TestFloatMap : map<float, float>
    TestInt32Map : map<int32, int32>
    TestInt64Map : map<int64, int64>
    TestBoolMap : map<bool, bool>
    TestStringMap : map<string, string>
    TestBytesMap : map<bytes, bytes>
    TestDecimalMap : map<decimal, decimal>
    TestDateMap : map<date, date>
    TestDatetimeMap : map<datetime, datetime>
    TestLocaldatetimeMap : map<localdatetime, localdatetime>
    TestMapMap : map<map<string, string>, map<string, string>>
    TestSetMap : map<set<string>, set<string>>
//    TestValueorerrorMap : map<valueorerror<decimal>, valueorerror<decimal>> //Hmm what does this mean if there is an error
    TestObjectMap : map<collections.InnerType, collections.InnerType>
    TestArrayMap : map<string[], string[]>
//    TestOptionalDoubleMap : map<optional double, optional double>
//    TestOptionalFloatMap : map<optional float, optional float>
    TestOptionalInt32Map : map<optional int32, optional int32>
    TestOptionalInt64Map : map<optional int64, optional int64>
    TestOptionalBoolMap : map<optional bool, optional bool>
    TestOptionalStringMap : map<optional string, optional string>
    TestOptionalBytesMap : map<optional bytes, optional bytes>
    TestOptionalDecimalMap : map<optional decimal, optional decimal>
    TestOptionalDateSetMap : map<optional date, optional date>
    TestOptionalDatetimeMap : map<optional datetime, optional datetime>
    TestOptionalLocaldatetimeMap : map<optional localdatetime, optional localdatetime>
    TestOptionalMapMap : map<optional map<string, string>, optional map<string, string>>
    TestOptionalSetMap : map<optional set<string>, optional set<string>>
//    TestOptionalValueorerrorMap : map<optional valueorerror<decimal>, optional valueorerror<decimal>>
    TestOptionalObjectMap : map<optional collections.InnerType, optional collections.InnerType>
    TestOptionalArrayMap : map<optional string[], optional string[]>
}